import org.gradle.api.plugins.jetty.internal.Monitor
import groovy.sql.Sql

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jetty'

sourceCompatibility = 1.7
version = '0.2.0'

/*
 * Generacion de catalogos para MySQL
 * */

/* MySQL */
def db = [
        driver: 'org.gjt.mm.mysql.Driver',
        url: 'jdbc:mysql://localhost:3306/RegistroCivil',
        user: 'root',
        password: ''
]

task poblarCatalogos << {
    Sql sql = Sql.newInstance(db.url, db.user, db.password, db.driver)
    new File('sql/RegistroCivil_Catalogos.sql').eachLine {
        def sentencia = it.trim()
        if (sentencia.length()>2 && !sentencia[0..1].equals('--')) sql.execute(it)
    }
    println 'Listo.'
}

task recrearBD << {
    Sql sql = Sql.newInstance(db.url, db.user, db.password, db.driver)
    println 'Eliminando base de datos...'
    sql.execute('DROP DATABASE RegistroCivil;')
    println 'Creando base de datos vacia...'
    sql.execute('CREATE DATABASE RegistroCivil')
    println 'Listo.'
}

configurations {
    driver
}

/*
 * Repositorios y dependencias
 */

repositories {
    mavenCentral()
    maven {
        url 'http://repository.primefaces.org/'
    }
    maven {
        url 'http://projectlombok.org/mavenrepo'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    compile 'com.sun.faces:jsf-api:2.2.5'
    compile 'com.sun.faces:jsf-impl:2.2.5'
    compile 'org.primefaces:primefaces:4.0'
    compile 'org.primefaces.themes:bootstrap:1.0.10'
      
    compile 'org.springframework:spring-context-support:3.2.6.RELEASE'
    compile 'org.springframework:spring-orm:4.0.0.RELEASE'
    compile 'org.springframework.security:spring-security-web:3.2.0.RELEASE'
    compile 'org.springframework.security:spring-security-config:3.2.0.RELEASE'
    
    compile 'log4j:log4j:1.2.16'
    compile 'org.hibernate:hibernate-core:4.3.0.Final'

    compile 'org.projectlombok:lombok:1.12.4'    
    compile 'mysql:mysql-connector-java:5.1.28'
    compile 'c3p0:c3p0:0.9.1.2'
    compile 'joda-time:joda-time:2.3'

    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'

    driver  'mysql:mysql-connector-java:5.1.28'
}

URLClassLoader loader = GroovyObject.class.classLoader
configurations.driver.each {File file ->
    loader.addURL(file.toURL())
}

/*
 * Fix para que jettyStop funcione correctamente
 */

[jettyRun, jettyRunWar]*.doLast {
    if (getStopPort() != null && getStopPort() > 0 && getStopKey() != null) {
        Monitor monitor = new Monitor(getStopPort(), getStopKey(), server.getProxiedObject());
        monitor.start();
    }
}

httpPort = 9090
stopPort = 8081
stopKey = 'w00t'